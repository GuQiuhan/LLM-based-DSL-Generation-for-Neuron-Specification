api: torch.linalg.slogdet
doc: "\n\ntorch.linalg.slogdet(A, *, out=None)\xB6\nComputes the sign and natural\
  \ logarithm of the absolute value of the determinant of a square matrix.\nFor complex\
  \ A, it returns the sign and the natural logarithm of the modulus of the\ndeterminant,\
  \ that is, a logarithmic polar decomposition of the determinant.\nThe determinant\
  \ can be recovered as sign * exp(logabsdet).\nWhen a matrix has a determinant of\
  \ zero, it returns (0, -inf).\nSupports input of float, double, cfloat and cdouble\
  \ dtypes.\nAlso supports batches of matrices, and if A is a batch of matrices then\n\
  the output has the same batch dimensions.\n\nSee also\ntorch.linalg.det() computes\
  \ the determinant of square matrices.\n\n\nParameters\nA (Tensor) \u2013 tensor\
  \ of shape (*, n, n) where * is zero or more batch dimensions.\n\nKeyword Arguments\n\
  out (tuple, optional) \u2013 output tuple of two tensors. Ignored if None. Default:\
  \ None.\n\nReturns\nA named tuple (sign, logabsdet).\nsign will have the same dtype\
  \ as A.\nlogabsdet will always be real-valued, even when A is complex.\n\n\n\nExamples:\n\
  >>> A = torch.randn(3, 3)\n>>> A\ntensor([[ 0.0032, -0.2239, -1.1219],\n       \
  \ [-0.6690,  0.1161,  0.4053],\n        [-1.6218, -0.9273, -0.0082]])\n>>> torch.linalg.det(A)\n\
  tensor(-0.7576)\n>>> torch.logdet(A)\ntensor(nan)\n>>> torch.linalg.slogdet(A)\n\
  torch.return_types.linalg_slogdet(sign=tensor(-1.), logabsdet=tensor(-0.2776))\n\
  \n\n"
