api: torch.nn.functional.conv3d
doc: "\n\ntorch.nn.functional.conv3d(input, weight, bias=None, stride=1, padding=0,\
  \ dilation=1, groups=1) \u2192 Tensor\xB6\nApplies a 3D convolution over an input\
  \ image composed of several input\nplanes.\nThis operator supports TensorFloat32.\n\
  See Conv3d for details and output shape.\n\nNote\nIn some circumstances when given\
  \ tensors on a CUDA device and using CuDNN, this operator may select a nondeterministic\
  \ algorithm to increase performance. If this is undesirable, you can try to make\
  \ the operation deterministic (potentially at a performance cost) by setting torch.backends.cudnn.deterministic\
  \ = True. See Reproducibility for more information.\n\n\nNote\nThis operator supports\
  \ complex data types i.e. complex32, complex64, complex128.\n\n\nParameters\n\n\
  input \u2013 input tensor of shape (minibatch,in_channels,iT,iH,iW)(\\text{minibatch}\
  \ , \\text{in\\_channels} , iT , iH , iW)(minibatch,in_channels,iT,iH,iW)\nweight\
  \ \u2013 filters of shape (out_channels,in_channelsgroups,kT,kH,kW)(\\text{out\\\
  _channels} , \\frac{\\text{in\\_channels}}{\\text{groups}} , kT , kH , kW)(out_channels,groupsin_channels\u200B\
  ,kT,kH,kW)\nbias \u2013 optional bias tensor of shape (out_channels)(\\text{out\\\
  _channels})(out_channels). Default: None\nstride \u2013 the stride of the convolving\
  \ kernel. Can be a single number or a\ntuple (sT, sH, sW). Default: 1\npadding \u2013\
  \ implicit paddings on both sides of the input. Can be a string {\u2018valid\u2019\
  , \u2018same\u2019},\nsingle number or a tuple (padT, padH, padW). Default: 0\n\
  padding='valid' is the same as no padding. padding='same' pads\nthe input so the\
  \ output has the same shape as the input. However, this mode\ndoesn\u2019t support\
  \ any stride values other than 1.\n\nWarning\nFor padding='same', if the weight\
  \ is even-length and\ndilation is odd in any dimension, a full pad() operation\n\
  may be needed internally. Lowering performance.\n\n\ndilation \u2013 the spacing\
  \ between kernel elements. Can be a single number or\na tuple (dT, dH, dW). Default:\
  \ 1\ngroups \u2013 split input into groups, in_channels\\text{in\\_channels}in_channels\
  \ should be divisible by\nthe number of groups. Default: 1\n\n\n\nExamples:\n>>>\
  \ filters = torch.randn(33, 16, 3, 3, 3)\n>>> inputs = torch.randn(20, 16, 50, 10,\
  \ 20)\n>>> F.conv3d(inputs, filters)\n\n\n"
