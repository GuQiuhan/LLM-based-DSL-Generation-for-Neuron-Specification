api: torch.signal.windows.bartlett
doc: "\n\ntorch.signal.windows.bartlett(M, *, sym=True, dtype=None, layout=torch.strided,\
  \ device=None, requires_grad=False)[source]\xB6\nComputes the Bartlett window.\n\
  The Bartlett window is defined as follows:\n\nwn=1\u2212\u22232nM\u22121\u22121\u2223\
  ={2nM\u22121if\_0\u2264n\u2264M\u2212122\u22122nM\u22121if\_M\u221212<n<Mw_n = 1\
  \ - \\left| \\frac{2n}{M - 1} - 1 \\right| = \\begin{cases}\n    \\frac{2n}{M -\
  \ 1} & \\text{if } 0 \\leq n \\leq \\frac{M - 1}{2} \\\\\n    2 - \\frac{2n}{M -\
  \ 1} & \\text{if } \\frac{M - 1}{2} < n < M \\\\ \\end{cases}\n\nwn\u200B=1\u2212\
  \u200BM\u221212n\u200B\u22121\u200B={M\u221212n\u200B2\u2212M\u221212n\u200B\u200B\
  if\_0\u2264n\u22642M\u22121\u200Bif\_2M\u22121\u200B<n<M\u200BThe window is normalized\
  \ to 1 (maximum value is 1). However, the 1 doesn\u2019t appear if M is even and\
  \ sym is True.\n\nParameters\nM (int) \u2013 the length of the window.\nIn other\
  \ words, the number of points of the returned window.\n\nKeyword Arguments\n\nsym\
  \ (bool, optional) \u2013 If False, returns a periodic window suitable for use in\
  \ spectral analysis.\nIf True, returns a symmetric window suitable for use in filter\
  \ design. Default: True.\ndtype (torch.dtype, optional) \u2013 the desired data\
  \ type of returned tensor.\nDefault: if None, uses a global default (see torch.set_default_dtype()).\n\
  layout (torch.layout, optional) \u2013 the desired layout of returned Tensor.\n\
  Default: torch.strided.\ndevice (torch.device, optional) \u2013 the desired device\
  \ of returned tensor.\nDefault: if None, uses the current device for the default\
  \ tensor type\n(see torch.set_default_device()). device will be the CPU\nfor CPU\
  \ tensor types and the current CUDA device for CUDA tensor types.\nrequires_grad\
  \ (bool, optional) \u2013 If autograd should record operations on the\nreturned\
  \ tensor. Default: False.\n\n\nReturn type\nTensor\n\n\nExamples:\n>>> # Generates\
  \ a symmetric Bartlett window.\n>>> torch.signal.windows.bartlett(10)\ntensor([0.0000,\
  \ 0.2222, 0.4444, 0.6667, 0.8889, 0.8889, 0.6667, 0.4444, 0.2222, 0.0000])\n\n>>>\
  \ # Generates a periodic Bartlett window.\n>>> torch.signal.windows.bartlett(10,\
  \ sym=False)\ntensor([0.0000, 0.2000, 0.4000, 0.6000, 0.8000, 1.0000, 0.8000, 0.6000,\
  \ 0.4000, 0.2000])\n\n\n"
