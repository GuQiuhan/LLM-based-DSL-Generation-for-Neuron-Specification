api: torch.linalg.solve_ex
doc: "\n\ntorch.linalg.solve_ex(A, B, *, left=True, check_errors=False, out=None)\xB6\
  \nA version of solve() that does not perform error checks unless check_errors= True.\n\
  It also returns the info tensor returned by LAPACK\u2019s getrf.\n\nNote\nWhen the\
  \ inputs are on a CUDA device, this function synchronizes only when check_errors=\
  \ True.\n\n\nWarning\nThis function is \u201Cexperimental\u201D and it may change\
  \ in a future PyTorch release.\n\n\nParameters\nA (Tensor) \u2013 tensor of shape\
  \ (*, n, n) where * is zero or more batch dimensions.\n\nKeyword Arguments\n\nleft\
  \ (bool, optional) \u2013 whether to solve the system AX=BAX=BAX=B or XA=BXA = BXA=B.\
  \ Default: True.\ncheck_errors (bool, optional) \u2013 controls whether to check\
  \ the content of infos and raise\nan error if it is non-zero. Default: False.\n\
  out (tuple, optional) \u2013 tuple of two tensors to write the output to. Ignored\
  \ if None. Default: None.\n\n\nReturns\nA named tuple (result, info).\n\n\nExamples:\n\
  >>> A = torch.randn(3, 3)\n>>> Ainv, info = torch.linalg.solve_ex(A)\n>>> torch.dist(torch.linalg.inv(A),\
  \ Ainv)\ntensor(0.)\n>>> info\ntensor(0, dtype=torch.int32)\n\n\n"
