api: torch.nn.functional.bilinear
doc: "\n\ntorch.nn.functional.bilinear(input1, input2, weight, bias=None) \u2192 Tensor\xB6\
  \nApplies a bilinear transformation to the incoming data:\ny=x1TAx2+by = x_1^T A\
  \ x_2 + by=x1T\u200BAx2\u200B+b\nShape:\n\n\ninput1: (N,\u2217,Hin1)(N, *, H_{in1})(N,\u2217\
  ,Hin1\u200B) where Hin1=in1_featuresH_{in1}=\\text{in1\\_features}Hin1\u200B=in1_features\n\
  and \u2217*\u2217 means any number of additional dimensions.\nAll but the last dimension\
  \ of the inputs should be the same.\ninput2: (N,\u2217,Hin2)(N, *, H_{in2})(N,\u2217\
  ,Hin2\u200B) where Hin2=in2_featuresH_{in2}=\\text{in2\\_features}Hin2\u200B=in2_features\n\
  weight: (out_features,in1_features,in2_features)(\\text{out\\_features}, \\text{in1\\\
  _features},\n\\text{in2\\_features})(out_features,in1_features,in2_features)\nbias:\
  \ (out_features)(\\text{out\\_features})(out_features)\noutput: (N,\u2217,Hout)(N,\
  \ *, H_{out})(N,\u2217,Hout\u200B) where Hout=out_featuresH_{out}=\\text{out\\_features}Hout\u200B\
  =out_features\nand all but the last dimension are the same shape as the input.\n\
  \n\n"
