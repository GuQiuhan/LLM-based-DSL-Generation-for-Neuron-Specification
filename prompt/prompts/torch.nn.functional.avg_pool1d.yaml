api: torch.nn.functional.avg_pool1d
doc: "\n\ntorch.nn.functional.avg_pool1d(input, kernel_size, stride=None, padding=0,\
  \ ceil_mode=False, count_include_pad=True) \u2192 Tensor\xB6\nApplies a 1D average\
  \ pooling over an input signal composed of several\ninput planes.\nSee AvgPool1d\
  \ for details and output shape.\n\nParameters\n\ninput \u2013 input tensor of shape\
  \ (minibatch,in_channels,iW)(\\text{minibatch} , \\text{in\\_channels} , iW)(minibatch,in_channels,iW)\n\
  kernel_size \u2013 the size of the window. Can be a single number or a\ntuple (kW,)\n\
  stride \u2013 the stride of the window. Can be a single number or a tuple\n(sW,).\
  \ Default: kernel_size\npadding \u2013 implicit zero paddings on both sides of the\
  \ input. Can be a\nsingle number or a tuple (padW,). Default: 0\nceil_mode \u2013\
  \ when True, will use ceil instead of floor to compute the\noutput shape. Default:\
  \ False\ncount_include_pad \u2013 when True, will include the zero-padding in the\n\
  averaging calculation. Default: True\n\n\n\nExamples:\n>>> # pool of square window\
  \ of size=3, stride=2\n>>> input = torch.tensor([[[1, 2, 3, 4, 5, 6, 7]]], dtype=torch.float32)\n\
  >>> F.avg_pool1d(input, kernel_size=3, stride=2)\ntensor([[[ 2.,  4.,  6.]]])\n\n\
  \n"
