api: torch.nn.functional.conv_transpose3d
doc: "\n\ntorch.nn.functional.conv_transpose3d(input, weight, bias=None, stride=1,\
  \ padding=0, output_padding=0, groups=1, dilation=1) \u2192 Tensor\xB6\nApplies\
  \ a 3D transposed convolution operator over an input image\ncomposed of several\
  \ input planes, sometimes also called \u201Cdeconvolution\u201D\nThis operator supports\
  \ TensorFloat32.\nSee ConvTranspose3d for details and output shape.\n\nNote\nIn\
  \ some circumstances when given tensors on a CUDA device and using CuDNN, this operator\
  \ may select a nondeterministic algorithm to increase performance. If this is undesirable,\
  \ you can try to make the operation deterministic (potentially at a performance\
  \ cost) by setting torch.backends.cudnn.deterministic = True. See Reproducibility\
  \ for more information.\n\n\nParameters\n\ninput \u2013 input tensor of shape (minibatch,in_channels,iT,iH,iW)(\\\
  text{minibatch} , \\text{in\\_channels} , iT , iH , iW)(minibatch,in_channels,iT,iH,iW)\n\
  weight \u2013 filters of shape (in_channels,out_channelsgroups,kT,kH,kW)(\\text{in\\\
  _channels} , \\frac{\\text{out\\_channels}}{\\text{groups}} , kT , kH , kW)(in_channels,groupsout_channels\u200B\
  ,kT,kH,kW)\nbias \u2013 optional bias of shape (out_channels)(\\text{out\\_channels})(out_channels).\
  \ Default: None\nstride \u2013 the stride of the convolving kernel. Can be a single\
  \ number or a\ntuple (sT, sH, sW). Default: 1\npadding \u2013 dilation * (kernel_size\
  \ - 1) - padding zero-padding will be added to both\nsides of each dimension in\
  \ the input. Can be a single number or a tuple\n(padT, padH, padW). Default: 0\n\
  output_padding \u2013 additional size added to one side of each dimension in the\n\
  output shape. Can be a single number or a tuple\n(out_padT, out_padH, out_padW).\
  \ Default: 0\ngroups \u2013 split input into groups, in_channels\\text{in\\_channels}in_channels\
  \ should be divisible by the\nnumber of groups. Default: 1\ndilation \u2013 the\
  \ spacing between kernel elements. Can be a single number or\na tuple (dT, dH, dW).\
  \ Default: 1\n\n\n\nExamples:\n>>> inputs = torch.randn(20, 16, 50, 10, 20)\n>>>\
  \ weights = torch.randn(16, 33, 3, 3, 3)\n>>> F.conv_transpose3d(inputs, weights)\n\
  \n\n"
