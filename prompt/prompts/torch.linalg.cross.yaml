api: torch.linalg.cross
doc: "\n\ntorch.linalg.cross(input, other, *, dim=-1, out=None) \u2192 Tensor\xB6\n\
  Computes the cross product of two 3-dimensional vectors.\nSupports input of float,\
  \ double, cfloat and cdouble dtypes. Also supports batches\nof vectors, for which\
  \ it computes the product along the dimension dim.\nIt broadcasts over the batch\
  \ dimensions.\n\nParameters\n\ninput (Tensor) \u2013 the first input tensor.\nother\
  \ (Tensor) \u2013 the second input tensor.\ndim (int, optional) \u2013 the dimension\
  \ along which to take the cross-product. Default: -1.\n\n\nKeyword Arguments\nout\
  \ (Tensor, optional) \u2013 the output tensor. Ignored if None. Default: None.\n\
  \n\nExample\n>>> a = torch.randn(4, 3)\n>>> a\ntensor([[-0.3956,  1.1455,  1.6895],\n\
  \        [-0.5849,  1.3672,  0.3599],\n        [-1.1626,  0.7180, -0.0521],\n  \
  \      [-0.1339,  0.9902, -2.0225]])\n>>> b = torch.randn(4, 3)\n>>> b\ntensor([[-0.0257,\
  \ -1.4725, -1.2251],\n        [-1.1479, -0.7005, -1.9757],\n        [-1.3904,  0.3726,\
  \ -1.1836],\n        [-0.9688, -0.7153,  0.2159]])\n>>> torch.linalg.cross(a, b)\n\
  tensor([[ 1.0844, -0.5281,  0.6120],\n        [-2.4490, -1.5687,  1.9792],\n   \
  \     [-0.8304, -1.3037,  0.5650],\n        [-1.2329,  1.9883,  1.0551]])\n>>> a\
  \ = torch.randn(1, 3)  # a is broadcast to match shape of b\n>>> a\ntensor([[-0.9941,\
  \ -0.5132,  0.5681]])\n>>> torch.linalg.cross(a, b)\ntensor([[ 1.4653, -1.2325,\
  \  1.4507],\n        [ 1.4119, -2.6163,  0.1073],\n        [ 0.3957, -1.9666, -1.0840],\n\
  \        [ 0.2956, -0.3357,  0.2139]])\n\n\n"
