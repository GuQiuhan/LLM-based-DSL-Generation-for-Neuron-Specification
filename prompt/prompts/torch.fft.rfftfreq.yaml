api: torch.fft.rfftfreq
doc: "\n\ntorch.fft.rfftfreq(n, d=1.0, *, out=None, dtype=None, layout=torch.strided,\
  \ device=None, requires_grad=False) \u2192 Tensor\xB6\nComputes the sample frequencies\
  \ for rfft() with a signal of size n.\n\nNote\nrfft() returns Hermitian one-sided\
  \ output, so only the\npositive frequency terms are returned. For a real FFT of\
  \ length n\nand with inputs spaced in length unit d, the frequencies are:\nf = torch.arange((n\
  \ + 1) // 2) / (d * n)\n\n\n\n\nNote\nFor even lengths, the Nyquist frequency at\
  \ f[n/2] can be thought of as\neither negative or positive. Unlike fftfreq(),\n\
  rfftfreq() always returns it as positive.\n\n\nParameters\n\nn (int) \u2013 the\
  \ real FFT length\nd (float, optional) \u2013 The sampling length scale.\nThe spacing\
  \ between individual samples of the FFT input.\nThe default assumes unit spacing,\
  \ dividing that result by the actual\nspacing gives the result in physical frequency\
  \ units.\n\n\nKeyword Arguments\n\nout (Tensor, optional) \u2013 the output tensor.\n\
  dtype (torch.dtype, optional) \u2013 the desired data type of returned tensor.\n\
  Default: if None, uses a global default (see torch.set_default_dtype()).\nlayout\
  \ (torch.layout, optional) \u2013 the desired layout of returned Tensor.\nDefault:\
  \ torch.strided.\ndevice (torch.device, optional) \u2013 the desired device of returned\
  \ tensor.\nDefault: if None, uses the current device for the default tensor type\n\
  (see torch.set_default_device()). device will be the CPU\nfor CPU tensor types and\
  \ the current CUDA device for CUDA tensor types.\nrequires_grad (bool, optional)\
  \ \u2013 If autograd should record operations on the\nreturned tensor. Default:\
  \ False.\n\n\n\nExample\n>>> torch.fft.rfftfreq(5)\ntensor([0.0000, 0.2000, 0.4000])\n\
  \n\n>>> torch.fft.rfftfreq(4)\ntensor([0.0000, 0.2500, 0.5000])\n\n\nCompared to\
  \ the output from fftfreq(), we see that the\nNyquist frequency at f[2] has changed\
  \ sign:\n>>> torch.fft.fftfreq(4)\ntensor([ 0.0000,  0.2500, -0.5000, -0.2500])\n"
