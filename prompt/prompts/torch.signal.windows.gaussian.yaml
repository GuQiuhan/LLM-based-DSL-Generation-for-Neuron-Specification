api: torch.signal.windows.gaussian
doc: "\n\ntorch.signal.windows.gaussian(M, *, std=1.0, sym=True, dtype=None, layout=torch.strided,\
  \ device=None, requires_grad=False)[source]\xB6\nComputes a window with a gaussian\
  \ waveform.\nThe gaussian window is defined as follows:\n\nwn=exp\u2061(\u2212(n2\u03C3\
  )2)w_n = \\exp{\\left(-\\left(\\frac{n}{2\\sigma}\\right)^2\\right)}\n\nwn\u200B\
  =exp(\u2212(2\u03C3n\u200B)2)The window is normalized to 1 (maximum value is 1).\
  \ However, the 1 doesn\u2019t appear if M is even and sym is True.\n\nParameters\n\
  M (int) \u2013 the length of the window.\nIn other words, the number of points of\
  \ the returned window.\n\nKeyword Arguments\n\nstd (float, optional) \u2013 the\
  \ standard deviation of the gaussian. It controls how narrow or wide the window\
  \ is.\nDefault: 1.0.\nsym (bool, optional) \u2013 If False, returns a periodic window\
  \ suitable for use in spectral analysis.\nIf True, returns a symmetric window suitable\
  \ for use in filter design. Default: True.\ndtype (torch.dtype, optional) \u2013\
  \ the desired data type of returned tensor.\nDefault: if None, uses a global default\
  \ (see torch.set_default_dtype()).\nlayout (torch.layout, optional) \u2013 the desired\
  \ layout of returned Tensor.\nDefault: torch.strided.\ndevice (torch.device, optional)\
  \ \u2013 the desired device of returned tensor.\nDefault: if None, uses the current\
  \ device for the default tensor type\n(see torch.set_default_device()). device will\
  \ be the CPU\nfor CPU tensor types and the current CUDA device for CUDA tensor types.\n\
  requires_grad (bool, optional) \u2013 If autograd should record operations on the\n\
  returned tensor. Default: False.\n\n\nReturn type\nTensor\n\n\nExamples:\n>>> #\
  \ Generates a symmetric gaussian window with a standard deviation of 1.0.\n>>> torch.signal.windows.gaussian(10)\n\
  tensor([4.0065e-05, 2.1875e-03, 4.3937e-02, 3.2465e-01, 8.8250e-01, 8.8250e-01,\
  \ 3.2465e-01, 4.3937e-02, 2.1875e-03, 4.0065e-05])\n\n>>> # Generates a periodic\
  \ gaussian window and standard deviation equal to 0.9.\n>>> torch.signal.windows.gaussian(10,\
  \ sym=False,std=0.9)\ntensor([1.9858e-07, 5.1365e-05, 3.8659e-03, 8.4658e-02, 5.3941e-01,\
  \ 1.0000e+00, 5.3941e-01, 8.4658e-02, 3.8659e-03, 5.1365e-05])\n\n\n"
