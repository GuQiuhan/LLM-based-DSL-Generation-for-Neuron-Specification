api: torch.linalg.vecdot
doc: "\n\ntorch.linalg.vecdot(x, y, *, dim=-1, out=None) \u2192 Tensor\xB6\nComputes\
  \ the dot product of two batches of vectors along a dimension.\nIn symbols, this\
  \ function computes\n\n\u2211i=1nxi\u203Eyi.\\sum_{i=1}^n \\overline{x_i}y_i.i=1\u2211\
  n\u200Bxi\u200B\u200Byi\u200B.over the dimension dim where xi\u203E\\overline{x_i}xi\u200B\
  \u200B denotes the conjugate for complex\nvectors, and it is the identity for real\
  \ vectors.\nSupports input of half, bfloat16, float, double, cfloat, cdouble and\
  \ integral dtypes.\nIt also supports broadcasting.\n\nParameters\n\nx (Tensor) \u2013\
  \ first batch of vectors of shape (*, n).\ny (Tensor) \u2013 second batch of vectors\
  \ of shape (*, n).\n\n\nKeyword Arguments\n\ndim (int) \u2013 Dimension along which\
  \ to compute the dot product. Default: -1.\nout (Tensor, optional) \u2013 output\
  \ tensor. Ignored if None. Default: None.\n\n\n\nExamples:\n>>> v1 = torch.randn(3,\
  \ 2)\n>>> v2 = torch.randn(3, 2)\n>>> linalg.vecdot(v1, v2)\ntensor([ 0.3223,  0.2815,\
  \ -0.1944])\n>>> torch.vdot(v1[0], v2[0])\ntensor(0.3223)\n\n\n"
