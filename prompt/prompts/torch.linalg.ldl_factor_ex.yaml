api: torch.linalg.ldl_factor_ex
doc: "\n\ntorch.linalg.ldl_factor_ex(A, *, hermitian=False, check_errors=False, out=None)\xB6\
  \nThis is a version of ldl_factor() that does not perform error checks unless check_errors=\
  \ True.\nIt also returns the info tensor returned by LAPACK\u2019s sytrf.\ninfo\
  \ stores integer error codes from the backend library.\nA positive integer indicates\
  \ the diagonal element of DDD that is zero.\nDivision by 0 will occur if the result\
  \ is used for solving a system of linear equations.\ninfo filled with zeros indicates\
  \ that the factorization was successful.\nIf check_errors=True and info contains\
  \ positive integers, then a RuntimeError is thrown.\n\nNote\nWhen the inputs are\
  \ on a CUDA device, this function synchronizes only when check_errors= True.\n\n\
  \nWarning\nThis function is \u201Cexperimental\u201D and it may change in a future\
  \ PyTorch release.\n\n\nParameters\nA (Tensor) \u2013 tensor of shape (*, n, n)\
  \ where * is zero or more batch dimensions\nconsisting of symmetric or Hermitian\
  \ matrices.\n\nKeyword Arguments\n\nhermitian (bool, optional) \u2013 whether to\
  \ consider the input to be Hermitian or symmetric.\nFor real-valued matrices, this\
  \ switch has no effect. Default: False.\ncheck_errors (bool, optional) \u2013 controls\
  \ whether to check the content of info and raise\nan error if it is non-zero. Default:\
  \ False.\nout (tuple, optional) \u2013 tuple of three tensors to write the output\
  \ to. Ignored if None. Default: None.\n\n\nReturns\nA named tuple (LD, pivots, info).\n\
  \n\nExamples:\n>>> A = torch.randn(3, 3)\n>>> A = A @ A.mT # make symmetric\n>>>\
  \ A\ntensor([[7.2079, 4.2414, 1.9428],\n        [4.2414, 3.4554, 0.3264],\n    \
  \    [1.9428, 0.3264, 1.3823]])\n>>> LD, pivots, info = torch.linalg.ldl_factor_ex(A)\n\
  >>> LD\ntensor([[ 7.2079,  0.0000,  0.0000],\n        [ 0.5884,  0.9595,  0.0000],\n\
  \        [ 0.2695, -0.8513,  0.1633]])\n>>> pivots\ntensor([1, 2, 3], dtype=torch.int32)\n\
  >>> info\ntensor(0, dtype=torch.int32)\n\n\n"
