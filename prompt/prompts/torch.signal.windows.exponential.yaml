api: torch.signal.windows.exponential
doc: "\n\ntorch.signal.windows.exponential(M, *, center=None, tau=1.0, sym=True, dtype=None,\
  \ layout=torch.strided, device=None, requires_grad=False)[source]\xB6\nComputes\
  \ a window with an exponential waveform.\nAlso known as Poisson window.\nThe exponential\
  \ window is defined as follows:\n\nwn=exp\u2061(\u2212\u2223n\u2212c\u2223\u03C4\
  )w_n = \\exp{\\left(-\\frac{|n - c|}{\\tau}\\right)}\n\nwn\u200B=exp(\u2212\u03C4\
  \u2223n\u2212c\u2223\u200B)where c is the center of the window.\nThe window is normalized\
  \ to 1 (maximum value is 1). However, the 1 doesn\u2019t appear if M is even and\
  \ sym is True.\n\nParameters\nM (int) \u2013 the length of the window.\nIn other\
  \ words, the number of points of the returned window.\n\nKeyword Arguments\n\ncenter\
  \ (float, optional) \u2013 where the center of the window will be located.\nDefault:\
  \ M / 2 if sym is False, else (M - 1) / 2.\ntau (float, optional) \u2013 the decay\
  \ value.\nTau is generally associated with a percentage, that means, that the value\
  \ should\nvary within the interval (0, 100]. If tau is 100, it is considered the\
  \ uniform window.\nDefault: 1.0.\nsym (bool, optional) \u2013 If False, returns\
  \ a periodic window suitable for use in spectral analysis.\nIf True, returns a symmetric\
  \ window suitable for use in filter design. Default: True.\ndtype (torch.dtype,\
  \ optional) \u2013 the desired data type of returned tensor.\nDefault: if None,\
  \ uses a global default (see torch.set_default_dtype()).\nlayout (torch.layout,\
  \ optional) \u2013 the desired layout of returned Tensor.\nDefault: torch.strided.\n\
  device (torch.device, optional) \u2013 the desired device of returned tensor.\n\
  Default: if None, uses the current device for the default tensor type\n(see torch.set_default_device()).\
  \ device will be the CPU\nfor CPU tensor types and the current CUDA device for CUDA\
  \ tensor types.\nrequires_grad (bool, optional) \u2013 If autograd should record\
  \ operations on the\nreturned tensor. Default: False.\n\n\nReturn type\nTensor\n\
  \n\nExamples:\n>>> # Generates a symmetric exponential window of size 10 and with\
  \ a decay value of 1.0.\n>>> # The center will be at (M - 1) / 2, where M is 10.\n\
  >>> torch.signal.windows.exponential(10)\ntensor([0.0111, 0.0302, 0.0821, 0.2231,\
  \ 0.6065, 0.6065, 0.2231, 0.0821, 0.0302, 0.0111])\n\n>>> # Generates a periodic\
  \ exponential window and decay factor equal to .5\n>>> torch.signal.windows.exponential(10,\
  \ sym=False,tau=.5)\ntensor([4.5400e-05, 3.3546e-04, 2.4788e-03, 1.8316e-02, 1.3534e-01,\
  \ 1.0000e+00, 1.3534e-01, 1.8316e-02, 2.4788e-03, 3.3546e-04])\n\n\n"
