api: torch.nn.functional.pixel_unshuffle
doc: "\n\ntorch.nn.functional.pixel_unshuffle(input, downscale_factor) \u2192 Tensor\xB6\
  \nReverses the PixelShuffle operation by rearranging elements in a\ntensor of shape\
  \ (\u2217,C,H\xD7r,W\xD7r)(*, C, H \\times r, W \\times r)(\u2217,C,H\xD7r,W\xD7\
  r) to a tensor of shape\n(\u2217,C\xD7r2,H,W)(*, C \\times r^2, H, W)(\u2217,C\xD7\
  r2,H,W), where r is the downscale_factor.\nSee PixelUnshuffle for details.\n\nParameters\n\
  \ninput (Tensor) \u2013 the input tensor\ndownscale_factor (int) \u2013 factor to\
  \ increase spatial resolution by\n\n\n\nExamples:\n>>> input = torch.randn(1, 1,\
  \ 12, 12)\n>>> output = torch.nn.functional.pixel_unshuffle(input, 3)\n>>> print(output.size())\n\
  torch.Size([1, 9, 4, 4])\n\n\n"
