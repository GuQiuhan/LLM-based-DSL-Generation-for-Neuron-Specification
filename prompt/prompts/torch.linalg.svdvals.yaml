api: torch.linalg.svdvals
doc: "\n\ntorch.linalg.svdvals(A, *, driver=None, out=None) \u2192 Tensor\xB6\nComputes\
  \ the singular values of a matrix.\nSupports input of float, double, cfloat and\
  \ cdouble dtypes.\nAlso supports batches of matrices, and if A is a batch of matrices\
  \ then\nthe output has the same batch dimensions.\nThe singular values are returned\
  \ in descending order.\n\nNote\nThis function is equivalent to NumPy\u2019s linalg.svd(A,\
  \ compute_uv=False).\n\n\nNote\nWhen inputs are on a CUDA device, this function\
  \ synchronizes that device with the CPU.\n\n\nSee also\ntorch.linalg.svd() computes\
  \ the full singular value decomposition.\n\n\nParameters\nA (Tensor) \u2013 tensor\
  \ of shape (*, m, n) where * is zero or more batch dimensions.\n\nKeyword Arguments\n\
  \ndriver (str, optional) \u2013 name of the cuSOLVER method to be used. This keyword\
  \ argument only works on CUDA inputs.\nAvailable options are: None, gesvd, gesvdj,\
  \ and gesvda.\nCheck torch.linalg.svd() for details.\nDefault: None.\nout (Tensor,\
  \ optional) \u2013 output tensor. Ignored if None. Default: None.\n\n\nReturns\n\
  A real-valued tensor, even when A is complex.\n\n\nExamples:\n>>> A = torch.randn(5,\
  \ 3)\n>>> S = torch.linalg.svdvals(A)\n>>> S\ntensor([2.5139, 2.1087, 1.1066])\n\
  \n>>> torch.dist(S, torch.linalg.svd(A, full_matrices=False).S)\ntensor(2.4576e-07)\n\
  \n\n"
